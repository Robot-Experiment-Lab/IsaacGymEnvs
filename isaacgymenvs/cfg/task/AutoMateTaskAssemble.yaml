# See schema in factory_schema_config_task.py for descriptions of common parameters.

defaults:
    - AutoMateBase
    - _self_
    # - /factory_schema_config_task

name: AutoMateTaskAssemble
physics_engine: ${..physics_engine}

env:
    numEnvs: ${resolve_default:256,${...num_envs}}
    numObservations: 24
    numStates: 44
    numActions: 6

    move_gripper_sim_steps: 120
    close_gripper_sim_steps: 120
    disassemble_sim_steps: 10

    overwrite_subassemblies: True
    desired_subassemblies: ['asset_00346']

    socket_pos_obs_noise: [0.002, 0.002, 0.002]
    socket_rot_obs_noise: [0.0872665, 0.0872665, 0.0872665]

    data_dir: tasks/automate/data/
    plug_grasp_file: plug_grasps.json
    plug_pregrasp_offset: 0.1 # distance along z-axis before grasping the plug
    socket_z_offset: 0.1435 # distance along z-axis if socket is not directly placed on the tabletop
    palm_to_finger_dist: 0.1034 # distance from end-effector palm to midpoint between fingers
    disassembly_dist_file: disassembly_dist.json

    if_eval: False # if True, will evaluate current policy checkpoint at the most difficult curriculum level, and no curriculum level updates.

randomize:

    franka_arm_initial_dof_pos: [0.0, 0.0, 0.0, -1.870, 0.0, 1.8675, 0.785398]
    fingertip_centered_pos_initial: [0.0, 0.0, 0.2]  # initial position of midpoint between fingertips above table
    fingertip_centered_pos_noise: [0.0, 0.0, 0.0]  # noise on fingertip pos
    fingertip_centered_rot_initial: [3.141593, 0.0, 0.0]  # initial rotation of fingertips (Euler)
    fingertip_centered_rot_noise: [0.0, 0.0, 0.0]  # noise on rotation

    socket_pos_xy_initial: [0.5, 0.0]  # initial position of socket on table
    socket_pos_xy_noise: [0.1, 0.1]  # noise on socket position (i.e., randomization range)

    plug_pos_noise: [0.02, 0.02, 0.02] # pos noise w.r.t. socket position
    plug_rot_noise: [0.0872665, 0.0872665, 0.0872665] # noise on base orientation [rad] w.r.t. socket orientation 

rl:
    clamp_rot: True
    clamp_rot_thresh: 1.0e-6

    pos_action_scale: [0.01, 0.01, 0.01]
    rot_action_scale: [0.01, 0.01, 0.01]
    force_action_scale: [1.0, 1.0, 1.0]
    torque_action_scale: [1.0, 1.0, 1.0]

    max_episode_length: 128

    num_keypoints: 4
    keypoint_scale: 1.0

    asset_tolerance: 0.01

    # SDF-Based Reward
    sdf_reward_scale: 10.0

    # Imitation Reward
    num_point_robot_traj: 10 # number of waypoints included in the end-effector trajectory
    imitation_reward_scale: 10.0
    soft_dtw_gamma: 0.01 # set to 0 if want to use the original DTW without any smoothing

    # SAPU
    num_mesh_sample_points: 1000
    interpen_thresh: 0.001

    # SBC
    curriculum_success_thresh: 0.8  # success rate threshold for increasing curriculum difficulty
    curriculum_failure_thresh: 0.5  # success rate threshold for decreasing curriculum difficulty
    curriculum_freespace_range: 0.01
    num_curriculum_step: 10

    # Success bonus
    close_error_thresh: 0.02  # threshold below which plug is considered close to socket
    engagement_bonus: 10.0  # bonus if plug is engaged (partially inserted) with socket

ctrl:
    ctrl_type: task_space_nullspace  # {gym_default,
                               #  joint_space_ik, joint_space_id, 
                               #  task_space_impedance, operational_space_motion, 
                               #  open_loop_force, closed_loop_force,
                               #  hybrid_force_motion}
    all:
        jacobian_type: geometric
        gripper_prop_gains: [250, 250]
        gripper_deriv_gains: [2, 2]
    gym_default:
        ik_method: dls
        joint_prop_gains: [40, 40, 40, 40, 40, 40, 40]
        joint_deriv_gains: [8, 8, 8, 8, 8, 8, 8]
        gripper_prop_gains: [500, 500]
        gripper_deriv_gains: [20, 20]
    joint_space_ik:
        ik_method: dls
        joint_prop_gains: [1, 1, 1, 1, 1, 1, 1]
        joint_deriv_gains: [0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1]
    joint_space_id:
        ik_method: dls
        joint_prop_gains: [40, 40, 40, 40, 40, 40, 40]
        joint_deriv_gains: [8, 8, 8, 8, 8, 8, 8]
    task_space_impedance:
        motion_ctrl_axes: [1, 1, 1, 1, 1, 1]
        task_prop_gains:  [1000, 1000, 1000, 50, 50, 50]
        task_deriv_gains: [63.2, 63.2, 63.2, 1.41, 1.41, 1.41]
    task_space_nullspace:
        motion_ctrl_axes: [1, 1, 1, 1, 1, 1]
        task_prop_gains: [1000, 1000, 1000, 50, 50, 50]
        task_deriv_gains: [63.2, 63.2, 63.2, 1.41, 1.41, 1.41]  # computed as 2 * sqrt(k_p), but reduced by 10x for rotation
        default_dof_pos_tensor: [0.0, 0.0, 0.0, -1.870, 0.0, 1.8675, 0.785398]
        kp_null: 1.0
        kd_null: 2.0     
    operational_space_motion:
        motion_ctrl_axes: [1, 1, 1, 1, 1, 1]
        task_prop_gains: [60, 60, 60, 5, 5, 5]
        task_deriv_gains: [15.5, 15.5, 15.5, 4.5, 4.5, 4.5]
    open_loop_force:
        force_ctrl_axes: [0, 0, 1, 0, 0, 0]
    closed_loop_force:
        force_ctrl_axes: [0, 0, 1, 0, 0, 0]
        wrench_prop_gains: [0.1, 0.1, 0.1, 0.1, 0.1, 0.1]
    hybrid_force_motion:
        motion_ctrl_axes: [1, 1, 1, 1, 1, 1]
        task_prop_gains: [40, 40, 40, 40, 40, 40]
        task_deriv_gains: [8, 8, 8, 8, 8, 8]
        force_ctrl_axes: [0, 0, 1, 0, 0, 0]
        wrench_prop_gains: [0.1, 0.1, 0.1, 0.1, 0.1, 0.1]

